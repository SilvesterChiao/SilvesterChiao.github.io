(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{437:function(t,v,_){"use strict";_.r(v);var l=_(25),a=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"面向对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[t._v("#")]),t._v(" 面向对象")]),t._v(" "),_("p",[t._v("面向对象三大特征: 封装, 继承, 多态")]),t._v(" "),_("p",[t._v("多态的两种机制: 重载和覆盖")]),t._v(" "),_("h2",{attrs:{id:"概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),_("ol",[_("li",[t._v("类")])]),t._v(" "),_("p",[t._v("不能被继承的类叫最终类")]),t._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[_("p",[t._v("对象")])]),t._v(" "),_("li",[_("p",[t._v("构造函数")])]),t._v(" "),_("li",[_("p",[t._v("重载")])])]),t._v(" "),_("p",[t._v("定义多个不同参数的构造函数")]),t._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[_("p",[t._v("属性")])]),t._v(" "),_("li",[_("p",[t._v("方法")])]),t._v(" "),_("li",[_("p",[t._v("静态方法")])]),t._v(" "),_("li",[_("p",[t._v("公有成员")])]),t._v(" "),_("li",[_("p",[t._v("私有成员")])]),t._v(" "),_("li",[_("p",[t._v("抽象类")])]),t._v(" "),_("li",[_("p",[t._v("常量")])]),t._v(" "),_("li",[_("p",[t._v("最终方法")])])]),t._v(" "),_("p",[t._v("在子类中不能被覆盖")]),t._v(" "),_("ol",{attrs:{start:"13"}},[_("li",[t._v("抽象方法")])]),t._v(" "),_("p",[t._v("必须在子类中覆盖才能使用")])])}),[],!1,null,null,null);v.default=a.exports}}]);