(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{367:function(s,t,a){s.exports=a.p+"assets/img/husky_error.4990374d.png"},368:function(s,t,a){s.exports=a.p+"assets/img/commit_message.56f205bc.png"},518:function(s,t,a){"use strict";a.r(t);var e=a(25),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"git-commit-规范及自动生成-changelog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-规范及自动生成-changelog"}},[s._v("#")]),s._v(" Git commit 规范及自动生成 CHANGELOG")]),s._v(" "),e("ol",[e("li",[s._v("validate-commit-msg")]),s._v(" "),e("li",[s._v("husky")]),s._v(" "),e("li",[s._v("commitizen")]),s._v(" "),e("li",[s._v("cz-conventional-changelog")]),s._v(" "),e("li",[s._v("conventional-changelog-cli")])]),s._v(" "),e("h2",{attrs:{id:"commit-信息规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-信息规范"}},[s._v("#")]),s._v(" commit 信息规范")]),s._v(" "),e("p",[s._v("格式")]),s._v(" "),e("p",[s._v("type 类型")]),s._v(" "),e("ol",[e("li",[s._v("feat: 新功能")]),s._v(" "),e("li",[s._v("fix: 修补 bug")]),s._v(" "),e("li",[s._v("docs: 文档")]),s._v(" "),e("li",[s._v("style: 格式（不影响代码运行）")]),s._v(" "),e("li",[s._v("refactor: 重构（既不是新增功能，也不是修改bug的代码变动）")]),s._v(" "),e("li",[s._v("test: 增加测试")]),s._v(" "),e("li",[s._v("chore: 构建过程或辅助工具的变动")])]),s._v(" "),e("h2",{attrs:{id:"使用validate-commit-msg-检查-commit-message-是否符合格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用validate-commit-msg-检查-commit-message-是否符合格式"}},[s._v("#")]),s._v(" 使用validate-commit-msg 检查 Commit message 是否符合格式")]),s._v(" "),e("ol",[e("li",[s._v("安装 npm 包")])]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" —save-dev husky validate-commit-msg\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("在 package.json 中增加如下代码")])]),s._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"husky"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"hooks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commit-msg"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"validate-commit-msg"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("完成之后 Commit message 不符合格式时提示错误, 如下图所示")]),s._v(" "),e("p",[e("img",{attrs:{src:a(367),alt:"husky-error"}})]),s._v(" "),e("h2",{attrs:{id:"使用-commitizen-自动生成-commit-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-commitizen-自动生成-commit-message"}},[s._v("#")]),s._v(" 使用 commitizen 自动生成 Commit message")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g commitizen\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" global "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" commitizen\ncommitizen init cz-conventional-changelog —save —save-exact\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("执行成功之后, 会自动在 package.json 文件中增加以下配置")]),s._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"config"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commitizen"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"path"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./node_modules/cz-conventional-changelog"')]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("提交时使用 git cz 命令代替 git commit, 执行以下步骤生成符合格式的 Commit message")]),s._v(" "),e("p",[e("img",{attrs:{src:a(368),alt:"commit-message"}})]),s._v(" "),e("ol",[e("li",[s._v("选择type")]),s._v(" "),e("li",[s._v("更改的范围（组件或者文件名）")]),s._v(" "),e("li",[s._v("简要描述")]),s._v(" "),e("li",[s._v("详细描述")]),s._v(" "),e("li",[s._v("是否重大变化")]),s._v(" "),e("li",[s._v("body, 有关提交本身的详细说明")]),s._v(" "),e("li",[s._v("描述重大变化")]),s._v(" "),e("li",[s._v("会不会影响任何为解决的问题吗")])]),s._v(" "),e("h2",{attrs:{id:"使用-conventional-changelog-自动生成-changelog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-conventional-changelog-自动生成-changelog"}},[s._v("#")]),s._v(" 使用 conventional-changelog 自动生成 CHANGELOG")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -g conventional-changelog\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" global "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" conventional-changelog\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("conventional-changelog")]),s._v(" "),e("ul",[e("li",[s._v("-i, —infile  从此文件中读取 CHANGELOG")]),s._v(" "),e("li",[s._v("-o, —outfile  将 CHANGELOG 写入此文件")]),s._v(" "),e("li",[s._v("-s, —same-file  输出到 infile")]),s._v(" "),e("li",[s._v("-p, —preset  预设, angular | atom | codemirror | ember | eslint | express | jquery | jscs | jshint")]),s._v(" "),e("li",[s._v("-k, —pkg  package.json 所在位置的文件路径, 默认是距离 cwd 最近的 pakcage.json")]),s._v(" "),e("li",[s._v("-a, —append  是否应将较新的版本附加到旧版本, 默认为 false  其实就是正序还是倒序")]),s._v(" "),e("li",[s._v("-r, —release-count  从最新生成的版本数 默认为1, 如果指定为0则重新生成整个 CHANGELOG, 并且覆盖输出文件")]),s._v(" "),e("li",[s._v("-u, —output-unreleased  输出未发布的 changelog")]),s._v(" "),e("li",[s._v("-v, —verbose  详细输出. 使用它进行调试, 默认为 false")]),s._v(" "),e("li",[s._v("-n, —config  配置脚本的文件路径")]),s._v(" "),e("li",[s._v("-c, —context  用于定义模板变量的 json 的文件路径")]),s._v(" "),e("li",[s._v("-l, —lerna-package")]),s._v(" "),e("li",[s._v("-t, —tag-prefix  读取标签时要考虑的标签前缀")]),s._v(" "),e("li",[s._v("—commit-path  生成范围为特定目录的变更日志")])]),s._v(" "),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0",target:"_blank",rel:"noopener noreferrer"}},[s._v("AngularJS Git Commit Message Conventions"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Commit message 和 Change log 编写指南"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/zivxiaowei/p/10089201.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("git commit、CHANGELOG 和版本发布的标准自动化"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/856bbb5ed9ec",target:"_blank",rel:"noopener noreferrer"}},[s._v("git commit 规范"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);